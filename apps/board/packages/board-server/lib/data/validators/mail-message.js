"use strict";
/**
 * AUTOGENERATED - DO NOT EDIT DIRECTLY!
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.validatePartial = exports.validate = exports.partialFieldValidators = exports.fieldValidators = void 0;
const _prec = require("@quenk/preconditions");
const _booleanPrec = require("@quenk/preconditions/lib/boolean");
const _numberPrec = require("@quenk/preconditions/lib/number");
const _stringPrec = require("@quenk/preconditions/lib/string");
const _recordPrec = require("@quenk/preconditions/lib/record");
//@ts-ignore: 6133
const _boolean = _booleanPrec.toBoolean;
//@ts-ignore: 6133
const _number = _numberPrec.toNumber;
//@ts-ignore: 6133
const _string = _prec.and(_stringPrec.isString, _stringPrec.trim);
/**
 * fieldValidators for MailMessage (AUTOGENERATED).
 */
exports.fieldValidators = {
    'to': _prec.and(_prec.notNull, _string),
    'from': _prec.and(_prec.notNull, _string),
    'body': _prec.and(_prec.notNull, _string)
};
/**
 * partialFieldValidators for MailMessage (AUTOGENERATED).
 */
exports.partialFieldValidators = {
    'to': _prec.and(_prec.notNull, _string),
    'from': _prec.and(_prec.notNull, _string),
    'body': _prec.and(_prec.notNull, _string)
};
/**
 * validate a value to determine if it satisfies the MailMessage type
 * (AUTOGENERATED).
 */
exports.validate = _prec.and(_recordPrec.isRecord, _recordPrec.restrict(exports.fieldValidators));
/**
 * validatePartial is like validate but only tests the fields encountered
 * (AUTOGENERATED).
 */
exports.validatePartial = _prec.and(_recordPrec.isRecord, _recordPrec.intersect(exports.partialFieldValidators));
//# sourceMappingURL=mail-message.js.map