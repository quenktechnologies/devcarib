"use strict";
/**
 * AUTOGENERATED - DO NOT EDIT DIRECTLY!
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkPartial = exports.check = exports.partialFieldChecks = exports.fieldChecks = void 0;
const job_1 = require("../validators/job");
const common_1 = require("./common");
const _prec = require("@quenk/preconditions/lib/async");
const _recordPrec = require("@quenk/preconditions/lib/async/record");
//@ts-ignore: 6133
const title = "Job";
//@ts-ignore: 6133
const collection = "jobs";
/**
 * fieldChecks for Job (AUTOGENERATED).
 */
exports.fieldChecks = {
    'id': _prec.every((0, common_1.unique)('jobs', 'id')),
    'title': _prec.identity,
    'type': _prec.identity,
    'location': _prec.identity,
    'remote': _prec.identity,
    'description': _prec.identity,
    'description_html': _prec.identity,
    'company': _prec.identity,
    'company_email': _prec.identity,
    'company_logo': _prec.identity,
    'apply_url': _prec.identity,
    'approved': _prec.identity,
    'status': _prec.identity,
    'created_by': _prec.identity,
    'created_on': _prec.identity,
    'last_updated_on': _prec.identity
};
/**
 * partialFieldChecks for Job (AUTOGENERATED).
 */
exports.partialFieldChecks = {
    'id': _prec.identity,
    'title': _prec.identity,
    'type': _prec.identity,
    'location': _prec.identity,
    'remote': _prec.identity,
    'description': _prec.identity,
    'description_html': _prec.identity,
    'company': _prec.identity,
    'company_email': _prec.identity,
    'company_logo': _prec.identity,
    'apply_url': _prec.identity,
    'approved': _prec.identity,
    'status': _prec.identity,
    'created_by': _prec.identity,
    'created_on': _prec.identity,
    'last_updated_on': _prec.identity
};
/**
 * check a value to determine if it is a correct Job
 * (AUTOGENERATED).
 */
exports.check = _prec.and(_prec.and(_prec.async(job_1.validate), _recordPrec.restrict(exports.fieldChecks)), _prec.every((0, common_1.parseMarkdown)('description', 'description_html'), (0, common_1.inc)('jobs')));
/**
 * checkPartial is like check but only checks the fields encountered.
 * (AUTOGENERATED).
 */
exports.checkPartial = _prec.and(_prec.and(_prec.async(job_1.validatePartial), _recordPrec.intersect(exports.partialFieldChecks)), _prec.every((0, common_1.parseMarkdown)('description', 'description_html'), (0, common_1.inc)('jobs')));
//# sourceMappingURL=job.js.map