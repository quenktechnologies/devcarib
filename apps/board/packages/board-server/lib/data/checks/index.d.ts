/**
 * AUTOGENERATED - DO NOT EDIT DIRECTLY!
 */
import * as _job from './job';
import * as _mailMessage from './mail-message';
import { Value } from '@quenk/noni/lib/data/jsonx';
import { Maybe } from '@quenk/noni/lib/data/maybe';
import { Record } from '@quenk/noni/lib/data/record';
import { Precondition } from '@quenk/preconditions/lib/async';
/**
 * DataTypeUnion combines all the checks data types found in this module
 * (AUTOGENERATED).
 */
export type DataTypeUnion = _job.DataType | _mailMessage.DataType;
/**
 * ChecksMap is a record mapping normalized model names to their respective
 * checks.
 */
export interface ChecksMap extends Record<Precondition<Value, DataTypeUnion>> {
}
/**
 * checksAvailable from this module (AUTOGENERATED).
 */
export declare const checksAvailable: ChecksMap;
/**
 * getChecksFor provides a validator from this module.
 */
export declare const getChecksFor: (name: string) => Maybe<Precondition<Value, DataTypeUnion>>;
/**
 * partialChecksAvailable from this module.
 */
export declare const partialChecksAvailable: ChecksMap;
/**
 * getPartialChecksFor provides a validator from this module.
 */
export declare const getPartialChecksFor: (name: string) => Maybe<Precondition<Value, DataTypeUnion>>;
