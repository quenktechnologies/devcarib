
-- [Actor Configuration] --

-- The id and mount point for this module.
-- Change if you want routes to be served relative to another directory.
id = "/"

-- [Server Configuration] --

-- Read the port number from the environment
server.port = ${PORT}

-- Bind to the loopback. You can change this if you like.
server.host = "0.0.0.0"

-- [Connections] --
connections = {

  main = {

    connector = @quenk/tendril-connection-mongodb#connector

    options = [${MONGO_URL}, {useNewUrlParser = true}]

  }

}

app.views = {

  provider = @quenk/tendril-show-nunjucks#show

  options = [{path = "packages/extras/board-views/views"}]
  
}

-- Default middleware configuration.
-- Remember that middleware must be declared available before actual use.
-- The "log" middleware will require npm install --save packages/@quenk/tendril-morgan
-- before yse.
app.middleware.available = {

  public = {

    provider = express#static
    
    options = [

      "${__dirname}/../../public",

       {maxAge=0}

    ]

  }

  viewsPublic = {

    provider = express#static
    
    options = [

      "${__dirname}/../../packages/extras/board-views/public",

       {maxAge=0}

    ]

  }

  postPublic = {

    provider = express#static

    options = [

      "${__dirname}/../../packages/apps/board-form-post/public",

       {maxAge=0}

    ]

  }

  adminPublic = {

    provider = express#static

    options = [

      "${__dirname}/../../packages/apps/board-admin/public",

       {maxAge=0}

    ]

  }

  log = {

    provider = @quenk/tendril-middleware-morgan#log
    
    options = [${MORGAN_LOG_FORMAT}]

  }

  json = {

    provider = body-parser#json 

  }

  urlencoded = {

    provider = body-parser#urlencoded 

  }
  
  session = {

    provider = @quenk/tendril-session-mongodb#session

    options = [{

    	session = {

      	secret = ${SESSION_SECRET}
      
        key = "boardsesssioncookie"
      
        resave = false
      
        saveUninitialized = false

      }
      
      store = {

        uri = ${MONGO_URL}

      }

  }]

  }

  rmExpired = {

    provider = @csa/session/lib/middleware#removeExpired

  }

  decTTL = {

    provider = @csa/session/lib/middleware#decrementTTL

  }

}

app.modules = {

  admin = ./admin#template

}

-- Actually enable the middleware in this order.
app.middleware.enabled = [
   "log",
   "public", 
   "viewsPublic",
   "postPublic",
   "adminPublic",
   "frontend",
   "session",
   "rmExpired",
   "decTTL",
   "json", 
   "urlencoded"
 ]

-- Invoke the connected hook.
app.on.connected = [

  ../app/events#connected,

  ../app/setup#run

]

-- Invoke the started hook.
app.on.started = ../app/events#started
