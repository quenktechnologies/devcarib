{% from "macros/type2Test.checks" import type2Test %}

{# Note: The document used with this template should have an import for a 
   "validate" and "validatePartial" function from the validation library.
 
   The checks are generated to validate input before checking.
#}
/**
 * {{document.title}} checks module.
 * AUTO GENERATED! DO NOT EDIT DIRECTLY! 
 */
 /** imports **/
//@ts-ignore: 6133
import {merge as _merge} from '@quenk/noni/lib/data/record';
//@ts-ignore: 6133
import {Value, Object} from '@quenk/noni/lib/data/jsonx';
//@ts-ignore: 6133
import { 
Precondition, 
Preconditions,
optional as _optional,
discard as _discard,
and as _and,
or as _or,
match as _match,
caseOf as _caseOf,
async as _async,
identity as _identity,
every as _every,
reject as _reject
}from '@quenk/preconditions/lib/async';
//@ts-ignore: 6133
import {
map as _map
} from '@quenk/preconditions/lib/async/array';
//@ts-ignore: 6133
import {
restrict as _restrict,
intersect as _intersect,
map as _recordMap,
} from '@quenk/preconditions/lib/async/record';

{{ imports2TS(document.imports) }}

{% if document.title %}
//@ts-ignore: 6133
const _title = '{{document.title}}';
{% endif %}
{% if document.collection %}
//@ts-ignore: 6133
const _collection = '{{document.collection}}';
{% endif %}

/**
 * checks for {{document.title}} provided as a map.
 */ 
export const checks:Preconditions<Value, Value> = {
  {% for key,value in document.properties %}
    '{{key}}':  {% if (not value.readOnly) or hasTest(value) %}
                 {{type2Test(value, "_restrict")|trim}}
                {% else %}
                  _identity
                  {% endif %}{% if not loop.last %},{% endif %}{{"\n"}}
  {%- endfor -%}
};

/**
 * partialChecks for {{document.title}} provided as a map.
 */ 
export const partialChecks:Preconditions<Value, Value> = {
  {% for key,value in document.properties %}
    '{{key}}':  {% if (not value.readOnly) or hasTest(value) %}
                 {{type2Test(value, "_intersect")|trim}}
                {% else %}
                  _identity
                  {% endif %}{% if not loop.last %},{% endif %}{{"\n"}}
  {%- endfor -%}
};

{% set params -%}
  {% if isArray(document.parameters) %}
    {{parameters2TS(document.parameters)}}
  {% endif %}
{%- endset %}



/**
 * check a {{document.title}} value.
 */
export const check = ({{params}}) : Precondition<Value, {{document.title}}> => 
  {% if hasTest(document) %}
    _and({{ getTest(document) }},
     _and<Value, {{document.title}},{{document.title}}>(_async(validate),
      _restrict(checks)));
  {% else %}
    _and<Value, {{document.title}},{{document.title}}>(_async(validate),
      _restrict(checks));
  {% endif %}

/**
 * checkPartial a partial {{document.title}} value.
 */
 export const checkPartial = ({{params}}) : Precondition<Value, Partial<{{document.title}}>> => 
 _and<Value, {{document.title}},{{document.title}}>(_async(validatePartial), 
   _intersect(partialChecks));
